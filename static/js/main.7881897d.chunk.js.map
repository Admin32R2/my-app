{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","word","setWord","useState","upperWord","setUpperWord","React","createElement","onSubmit","async","e","preventDefault","response","axios","post","data","upper_word","error","console","type","value","onChange","target","placeholder","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"2NA+CeA,MA5CHA,KACV,MAAOC,EAAMC,GAAWC,mBAAS,KAC1BC,EAAWC,GAAgBF,mBAAS,IAqB3C,OACEG,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,6BAGJD,IAAAC,cAAA,QAAMC,SAlBWC,UACnBC,EAAEC,iBACF,IAEE,MAAMC,QAAiBC,IAAMC,KAAK,qCAAsC,CAAEb,SAG1EI,EAAaO,EAASG,KAAKC,YAC3B,MAAOC,GACPC,QAAQD,MAAM,yBAA0BA,MAUtCX,IAAAC,cAAA,SACEY,KAAK,OACLC,MAAOnB,EACPoB,SA3BkBX,IACxBR,EAAQQ,EAAEY,OAAOF,QA2BXG,YAAY,iBAEdjB,IAAAC,cAAA,UAAQY,KAAK,UAAS,YAIvBf,GAAaE,IAAAC,cAAA,UAAI,mBAAiBH,KC9B1BoB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHhC,IAAAC,cAACD,IAAMiC,WAAU,KACfjC,IAAAC,cAACP,EAAG,QAORwB,M","file":"static/js/main.7881897d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n  const [word, setWord] = useState('');           // State to store the input word\n  const [upperWord, setUpperWord] = useState('');  // State to store the result (uppercase word)\n  \n  // Handle word input\n  const handleWordChange = (e) => {\n    setWord(e.target.value);\n  };\n\n  // Handle form submission (send word to Django API)\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      // Send POST request to Django API\n      const response = await axios.post('http://127.0.0.1:8000/api/convert/', { word });\n      \n      // Set the response to the state (uppercase word)\n      setUpperWord(response.data.upper_word);\n    } catch (error) {\n      console.error('Error converting word:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Convert Word to Uppercase</h1>\n      \n      {/* Input form */}\n      <form onSubmit={handleSubmit}>\n        <input \n          type=\"text\" \n          value={word} \n          onChange={handleWordChange} \n          placeholder=\"Enter a word\" \n        />\n        <button type=\"submit\">Convert</button>\n      </form>\n      \n      {/* Display result */}\n      {upperWord && <h2>Uppercase Word: {upperWord}</h2>}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}